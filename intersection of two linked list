int length(Node *head)
    {
        if( head==NULL)
            return 0;
        return 1+length(head->next);
    }
    Node *getIntersectionNode(Node *headA, Node *headB) {
        int len1=length(headA);
        int len2=length(headB);
        int d=0;
        if (len1<len2)
        {
            d=len2-len1;
             while(d!=0)
             {
                 headB=headB->next;
                 d--;
             }
        
        }
        else {
            d=len1-len2;
            while(d!=0)
            {
                headA=headA->next;
                d--;
            } 
    }
        
        while(headA!=NULL&&headB!=NULL)
        {
            if(headA==headB)
                return headA;
            else
            {
                headA=headA->next;
                headB=headB->next;
            }
            
        }
        return NULL;
    }
int findIntersection(Node *firstHead, Node *secondHead)
{
    //Write your code here
    Node * res=getIntersectionNode(firstHead, secondHead);
    return res->data;
}
