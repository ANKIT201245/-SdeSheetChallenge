int uniqueElement(vector<int> nums, int n)
{
	 int i=0;
            int j=nums.size()-1;
            while(i<j)
            {
                    int mid=i+(j-i)/2;
                    if(nums[mid]==nums[mid^1])i=mid+1;
                    else       j=mid;
            }
            return nums[i];
}






class Solution {
  
public:
    int singleNonDuplicate(vector<int>& nums) {
            int i=0;
            int j=nums.size()-1;
            while(i<j)
            {
                    int temp;
                    int mid=i+(j-i)/2;
                    if(mid&1)temp=mid-1;
                    else temp=mid+1;
                    if(nums[mid]==nums[temp])i=mid+1;
                    else       j=mid;
            }
            return nums[i];
        
    }
};
