// find left smaller 
        stack<int>st;
        int n=h.size();
        vector<int>left(n),right(n);
        for(int i=0;i<h.size();i++)
        {
            while(!st.empty()&&h[st.top()]>=h[i])
                st.pop();
            if(st.empty())left[i]=0;
            else left[i]=st.top()+1;
            st.push(i);
        }
        while(st.size()!=0)st.pop();
        // find right smaller
         for(int i=h.size()-1;i>=0;i--)
        {
            while(!st.empty() && h[st.top()] >= h[i]) 
                st.pop();
            if(st.empty())right[i]=n-1;
            else right[i]=st.top()-1;
            st.push(i);
        }
        int res=INT_MIN;
         // max of a[i]*(right[i]-left[i]+1); for every i ;
        for(int i=0;i<n;i++)
        {
            res=max(res,h[i]*(right[i]-left[i]+1));
        }
        
        
        return res;
        
